[{"/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/index.js":"1","/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/App.js":"2","/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/theme.js":"3","/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/views.jsx":"4","/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/ToggleColorMode.jsx":"5","/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/Login/Login.jsx":"6","/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/Login/SignUp.jsx":"7","/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/schemas/index.js":"8","/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/PrivateRoutes.js":"9","/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/AccountContext.js":"10","/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/Home/Home.jsx":"11","/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/Home/SideBar.jsx":"12","/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/Home/Chat.jsx":"13","/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/Home/AddFriendModal.jsx":"14","/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/TextField.jsx":"15","/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/Home/useSocketSetup.jsx":"16","/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/socket.js":"17","/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/Home/ChatBox.jsx":"18","/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/Home/logoutIcon.js":"19"},{"size":840,"mtime":1679220824587,"results":"20","hashOfConfig":"21"},{"size":373,"mtime":1682318226721,"results":"22","hashOfConfig":"21"},{"size":727,"mtime":1679220824587,"results":"23","hashOfConfig":"21"},{"size":841,"mtime":1682309138102,"results":"24","hashOfConfig":"21"},{"size":594,"mtime":1679220824586,"results":"25","hashOfConfig":"21"},{"size":3291,"mtime":1682312903870,"results":"26","hashOfConfig":"21"},{"size":3614,"mtime":1682312903879,"results":"27","hashOfConfig":"21"},{"size":575,"mtime":1682313374629,"results":"28","hashOfConfig":"21"},{"size":385,"mtime":1682390732445,"results":"29","hashOfConfig":"21"},{"size":1214,"mtime":1682390732443,"results":"30","hashOfConfig":"21"},{"size":1256,"mtime":1682390732443,"results":"31","hashOfConfig":"21"},{"size":2409,"mtime":1682574203888,"results":"32","hashOfConfig":"21"},{"size":2649,"mtime":1682390732443,"results":"33","hashOfConfig":"21"},{"size":2608,"mtime":1682390732443,"results":"34","hashOfConfig":"21"},{"size":616,"mtime":1679220824586,"results":"35","hashOfConfig":"21"},{"size":1358,"mtime":1682390732444,"results":"36","hashOfConfig":"21"},{"size":164,"mtime":1682390732445,"results":"37","hashOfConfig":"21"},{"size":1428,"mtime":1682390732443,"results":"38","hashOfConfig":"21"},{"size":429,"mtime":1682570487938,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1k0b7ya",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/index.js",[],[],[],"/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/App.js",[],[],"/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/theme.js",[],[],"/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/views.jsx",[],[],"/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/ToggleColorMode.jsx",[],[],"/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/Login/Login.jsx",["100","101","102","103","104","105"],[],"import {\n    VStack,\n    ButtonGroup,\n    FormControl,\n    Button,\n    FormErrorMessage,\n    FormLabel,\n    Input, Heading, Text\n} from \"@chakra-ui/react\";\nimport {Form, Formik, useFormik} from \"formik\";\nimport * as Yup from \"yup\"\nimport {TextField} from \"../TextField\";\nimport {useNavigate} from \"react-router-dom\";\nimport {formSchema} from '../../schemas/index'\nimport {useContext, useState} from \"react\";\nimport {AccountContext} from \"../AccountContext\";\n\nexport const Login = () => {\n    const {setUser} = useContext(AccountContext)\n    const [error, setError] = useState(null)\n    const navigate = useNavigate()\n\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    username: \"\",\n                    password: \"\"\n                }}\n                validationSchema={formSchema}\n                onSubmit={(values, actions) => {\n                    const vals = {...values}\n                    actions.resetForm();\n                    fetch(\"http://localhost:4000/auth/login\", {\n                        method: \"POST\",\n                        credentials: \"include\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify(vals),\n                    }).catch(err => {\n                        return;\n                    }).then(res => {\n                        if (!res || !res.ok || res.status >= 400) {\n                            return;\n                        }\n                        return res.json()\n                    }).then(data => {\n                        if (!data) return;\n                        setUser({...data})\n                        if (data.status) {\n                            setError(data.status)\n                        } else if (data.loggedIn) {\n                            navigate('/home');\n                        }\n                    })\n                }}>\n                <VStack\n                    as={Form}\n                    w={{base: \"90%\", md: \"500px\"}}\n                    m={\"auto\"}\n                    justify={\"center\"}\n                    h={\"100vh\"}\n                    spacing={\"1rem\"}\n                >\n                    <Heading>\n                        Log In\n                    </Heading>\n                    <Text as={'p'} color={'red.500'}>\n                        {error}\n                    </Text>\n\n                    <TextField\n                        name={\"username\"}\n                        placeholder={\"Enter username\"}\n                        autoComplete={\"off\"}\n                        label={\"Username\"}\n                    />\n                    <TextField\n                        name={\"password\"}\n                        placeholder={\"Enter Password\"}\n                        autoComplete={\"off\"}\n                        label={\"Password\"}\n                        type={'password'}\n                    />\n\n                    <ButtonGroup pt={\"1rem\"}>\n                        <Button colorScheme={\"teal\"} type={\"submit\"}>Log in</Button>\n                        <Button onClick={() => navigate('/register')} type={\"submit\"}>Create Account</Button>\n                    </ButtonGroup>\n                </VStack>\n            </Formik>\n        </>\n    );\n};","/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/Login/SignUp.jsx",["106","107","108","109","110","111"],[],"import {\n    VStack,\n    ButtonGroup,\n    FormControl,\n    Button,\n    FormErrorMessage,\n    FormLabel,\n    Input, Heading, Text\n} from \"@chakra-ui/react\";\nimport {Form, Formik, useFormik} from \"formik\";\nimport * as Yup from \"yup\"\nimport {TextField} from \"../TextField\";\nimport {useNavigate} from \"react-router-dom\";\nimport {ArrowBackIcon} from \"@chakra-ui/icons\";\nimport {formSchema} from '../../schemas/index'\nimport {useContext, useState} from \"react\";\nimport {AccountContext} from \"../AccountContext\";\n\n\nexport const SignUp = () => {\n    const {setUser} = useContext(AccountContext)\n    const [error, setError] = useState(null)\n    const navigate = useNavigate()\n\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    username: \"\",\n                    password: \"\"\n                }}\n                validationSchema={formSchema}\n                onSubmit={(values, actions) => {\n                    const vals = {...values}\n                    actions.resetForm();\n                    fetch(\"http://localhost:4000/auth/register\", {\n                        method: \"POST\",\n                        credentials: \"include\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify(vals),\n                    }).catch(err => {\n                        return\n                    }).then(res => {\n                        if (!res || !res.ok || res.status >= 400) {\n                            return\n                        }\n                        return res.json()\n                    }).then(data => {\n                        if (!data) return;\n                        setUser({...data})\n                        if (data.status) {\n                            setError(data.status)\n                        } else if (data.loggedIn) {\n                            navigate('/home');\n                        }\n                    })\n                }}>\n                <VStack\n                    as={Form}\n                    w={{base: \"90%\", md: \"500px\"}}\n                    m={\"auto\"}\n                    justify={\"center\"}\n                    h={\"100vh\"}\n                    spacing={\"1rem\"}\n                >\n                    <Heading>\n                        Sign up\n                    </Heading>\n                    <Text as={'p'} color={'red.500'}>\n                        {error}\n                    </Text>\n\n                    <TextField\n                        name={\"username\"}\n                        placeholder={\"Enter username\"}\n                        autoComplete={\"off\"}\n                        label={\"Username\"}\n                    />\n                    <TextField\n                        name={\"password\"}\n                        placeholder={\"Enter Password\"}\n                        autoComplete={\"off\"}\n                        label={\"Password\"}\n                        type={'password'}\n                    />\n                    <TextField\n                        name={\"retypePassword\"}\n                        placeholder={\"Retype Password\"}\n                        autoComplete={\"off\"}\n                        label={\"Retype password\"}\n                    />\n\n                    <ButtonGroup pt={\"1rem\"}>\n                        <Button colorScheme={\"teal\"} type={\"submit\"}>Create Account</Button>\n                        <Button onClick={() => navigate('/')} leftIcon={<ArrowBackIcon/>} type={\"submit\"}>Back</Button>\n                    </ButtonGroup>\n                </VStack>\n            </Formik>\n        </>\n    );\n};","/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/schemas/index.js",[],[],"/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/PrivateRoutes.js",[],[],"/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/AccountContext.js",["112"],[],"/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/Home/Home.jsx",[],[],"/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/Home/SideBar.jsx",["113","114","115","116"],[],"/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/Home/Chat.jsx",["117"],[],"/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/Home/AddFriendModal.jsx",[],[],"/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/TextField.jsx",[],[],"/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/Home/useSocketSetup.jsx",[],[],"/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/socket.js",[],[],"/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/Home/ChatBox.jsx",[],[],"/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/Home/logoutIcon.js",[],[],{"ruleId":"118","severity":1,"message":"119","line":4,"column":5,"nodeType":"120","messageId":"121","endLine":4,"endColumn":16},{"ruleId":"118","severity":1,"message":"122","line":6,"column":5,"nodeType":"120","messageId":"121","endLine":6,"endColumn":21},{"ruleId":"118","severity":1,"message":"123","line":7,"column":5,"nodeType":"120","messageId":"121","endLine":7,"endColumn":14},{"ruleId":"118","severity":1,"message":"124","line":8,"column":5,"nodeType":"120","messageId":"121","endLine":8,"endColumn":10},{"ruleId":"118","severity":1,"message":"125","line":10,"column":23,"nodeType":"120","messageId":"121","endLine":10,"endColumn":32},{"ruleId":"118","severity":1,"message":"126","line":11,"column":13,"nodeType":"120","messageId":"121","endLine":11,"endColumn":16},{"ruleId":"118","severity":1,"message":"119","line":4,"column":5,"nodeType":"120","messageId":"121","endLine":4,"endColumn":16},{"ruleId":"118","severity":1,"message":"122","line":6,"column":5,"nodeType":"120","messageId":"121","endLine":6,"endColumn":21},{"ruleId":"118","severity":1,"message":"123","line":7,"column":5,"nodeType":"120","messageId":"121","endLine":7,"endColumn":14},{"ruleId":"118","severity":1,"message":"124","line":8,"column":5,"nodeType":"120","messageId":"121","endLine":8,"endColumn":10},{"ruleId":"118","severity":1,"message":"125","line":10,"column":23,"nodeType":"120","messageId":"121","endLine":10,"endColumn":32},{"ruleId":"118","severity":1,"message":"126","line":11,"column":13,"nodeType":"120","messageId":"121","endLine":11,"endColumn":16},{"ruleId":"127","severity":1,"message":"128","line":33,"column":8,"nodeType":"129","endLine":33,"endColumn":10,"suggestions":"130"},{"ruleId":"118","severity":1,"message":"131","line":6,"column":19,"nodeType":"120","messageId":"121","endLine":6,"endColumn":24},{"ruleId":"118","severity":1,"message":"132","line":9,"column":5,"nodeType":"120","messageId":"121","endLine":9,"endColumn":9},{"ruleId":"118","severity":1,"message":"133","line":19,"column":25,"nodeType":"120","messageId":"121","endLine":19,"endColumn":36},{"ruleId":"127","severity":1,"message":"134","line":27,"column":5,"nodeType":"120","endLine":27,"endColumn":12},{"ruleId":"118","severity":1,"message":"131","line":1,"column":9,"nodeType":"120","messageId":"121","endLine":1,"endColumn":14},"no-unused-vars","'FormControl' is defined but never used.","Identifier","unusedVar","'FormErrorMessage' is defined but never used.","'FormLabel' is defined but never used.","'Input' is defined but never used.","'useFormik' is defined but never used.","'Yup' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["135"],"'Image' is defined but never used.","'Tabs' is defined but never used.","'UserContext' is defined but never used.","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?",{"desc":"136","fix":"137"},"Update the dependencies array to be: [navigate]",{"range":"138","text":"139"},[1096,1098],"[navigate]"]