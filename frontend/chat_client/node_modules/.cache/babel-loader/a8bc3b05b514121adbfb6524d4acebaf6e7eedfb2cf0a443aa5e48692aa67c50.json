{"ast":null,"code":"var _jsxFileName = \"/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/Login/SignUp.jsx\",\n  _s = $RefreshSig$();\nimport { VStack, ButtonGroup, FormControl, Button, FormErrorMessage, FormLabel, Input, Heading } from \"@chakra-ui/react\";\nimport { Form, Formik, useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField } from \"./TextField\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport { formSchema } from '../../schemas/index';\nimport { useContext, useState } from \"react\";\nimport { AccountContext } from \"../AccountContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SignUp = () => {\n  _s();\n  const {\n    setUser\n  } = useContext(AccountContext);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: \"\",\n        password: \"\"\n      },\n      validationSchema: formSchema,\n      onSubmit: (values, actions) => {\n        const vals = {\n          ...values\n        };\n        actions.resetForm();\n        fetch(\"http://localhost:4000/auth/register\", {\n          method: \"POST\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(vals)\n        }).catch(err => {\n          return;\n        }).then(res => {\n          if (!res || !res.ok || res.status >= 400) {\n            return;\n          }\n          return res.json();\n        }).then(data => {\n          if (!data) return;\n          setUser({\n            ...data\n          });\n          navigate('home');\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        as: Form,\n        w: {\n          base: \"90%\",\n          md: \"500px\"\n        },\n        m: \"auto\",\n        justify: \"center\",\n        h: \"100vh\",\n        spacing: \"1rem\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"username\",\n          placeholder: \"Enter username\",\n          autoComplete: \"off\",\n          label: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"password\",\n          placeholder: \"Enter Password\",\n          autoComplete: \"off\",\n          label: \"Password\",\n          type: 'password'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"retypePassword\",\n          placeholder: \"Retype Password\",\n          autoComplete: \"off\",\n          label: \"Retype password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          pt: \"1rem\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"teal\",\n            type: \"submit\",\n            children: \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => navigate('/'),\n            leftIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 73\n            }, this),\n            type: \"submit\",\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(SignUp, \"ZCZWv5CdnZokk9yxsJmDfs37VJc=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["VStack","ButtonGroup","FormControl","Button","FormErrorMessage","FormLabel","Input","Heading","Form","Formik","useFormik","Yup","TextField","useNavigate","ArrowBackIcon","formSchema","useContext","useState","AccountContext","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUp","_s","setUser","error","setError","navigate","children","initialValues","username","password","validationSchema","onSubmit","values","actions","vals","resetForm","fetch","method","credentials","headers","body","JSON","stringify","catch","err","then","res","ok","status","json","data","as","w","base","md","m","justify","h","spacing","fileName","_jsxFileName","lineNumber","columnNumber","name","placeholder","autoComplete","label","type","pt","colorScheme","onClick","leftIcon","_c","$RefreshReg$"],"sources":["/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/Login/SignUp.jsx"],"sourcesContent":["import {\n    VStack,\n    ButtonGroup,\n    FormControl,\n    Button,\n    FormErrorMessage,\n    FormLabel,\n    Input, Heading\n} from \"@chakra-ui/react\";\nimport {Form, Formik, useFormik} from \"formik\";\nimport * as Yup from \"yup\"\nimport {TextField} from \"./TextField\";\nimport {useNavigate} from \"react-router-dom\";\nimport {ArrowBackIcon} from \"@chakra-ui/icons\";\nimport {formSchema} from '../../schemas/index'\nimport {useContext, useState} from \"react\";\nimport {AccountContext} from \"../AccountContext\";\n\n\nexport const SignUp = () => {\n    const {setUser} = useContext(AccountContext)\n    const [error , setError] = useState(null)\n    const navigate = useNavigate()\n\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    username: \"\",\n                    password: \"\"\n                }}\n                validationSchema={formSchema}\n                onSubmit={(values, actions) => {\n                    const vals = {...values}\n                    actions.resetForm();\n                    fetch(\"http://localhost:4000/auth/register\", {\n                        method: \"POST\",\n                        credentials: \"include\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify(vals),\n                    }).catch(err => {\n                        return\n                    }).then(res => {\n                        if (!res || !res.ok || res.status >= 400) {\n                            return\n                        }\n                        return res.json()\n                    }).then(data => {\n                        if (!data) return;\n                        setUser({...data})\n                        navigate('home')\n                    })\n                }}>\n                <VStack\n                    as={Form}\n                    w={{base: \"90%\", md: \"500px\"}}\n                    m={\"auto\"}\n                    justify={\"center\"}\n                    h={\"100vh\"}\n                    spacing={\"1rem\"}\n                >\n                    <Heading>\n                        Sign up\n                    </Heading>\n\n                    <TextField\n                        name={\"username\"}\n                        placeholder={\"Enter username\"}\n                        autoComplete={\"off\"}\n                        label={\"Username\"}\n                    />\n                    <TextField\n                        name={\"password\"}\n                        placeholder={\"Enter Password\"}\n                        autoComplete={\"off\"}\n                        label={\"Password\"}\n                        type={'password'}\n                    />\n                    <TextField\n                        name={\"retypePassword\"}\n                        placeholder={\"Retype Password\"}\n                        autoComplete={\"off\"}\n                        label={\"Retype password\"}\n                    />\n\n                    <ButtonGroup pt={\"1rem\"}>\n                        <Button colorScheme={\"teal\"} type={\"submit\"}>Create Account</Button>\n                        <Button onClick={() => navigate('/')} leftIcon={<ArrowBackIcon/>} type={\"submit\"}>Back</Button>\n                    </ButtonGroup>\n                </VStack>\n            </Formik>\n        </>\n    );\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}