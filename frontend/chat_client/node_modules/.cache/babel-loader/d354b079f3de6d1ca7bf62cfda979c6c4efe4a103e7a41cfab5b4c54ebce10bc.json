{"ast":null,"code":"var _jsxFileName = \"/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/Home/ChatBox.jsx\";\nimport { Field, Form, Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport { HStack, Input } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChatBox = _ref => {\n  let {\n    userid\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      message: ''\n    },\n    validationSchema: Yup.object({\n      message: Yup.string().min(1).max(255)\n    }),\n    onSubmit: (values, actions) => {\n      console.log(values.message);\n      actions.resetForm();\n    },\n    children: /*#__PURE__*/_jsxDEV(HStack, {\n      as: Form,\n      w: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        as: Field,\n        name: \"message\",\n        placeholder: \"Type message here...\",\n        size: \"lg\",\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["Field","Form","Formik","Yup","HStack","Input","jsxDEV","_jsxDEV","ChatBox","_ref","userid","initialValues","message","validationSchema","object","string","min","max","onSubmit","values","actions","console","log","resetForm","children","as","w","name","placeholder","size","autoComplete","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rgthardkor/Projects/messendger/frontend/chat_client/src/components/Home/ChatBox.jsx"],"sourcesContent":["import {Field, Form, Formik} from \"formik\";\nimport * as Yup from 'yup'\nimport {HStack, Input} from \"@chakra-ui/react\";\n\nexport const ChatBox = ({userid}) => {\n    return (\n        <Formik initialValues={{message: ''}} validationSchema={Yup.object({\n            message: Yup.string().min(1).max(255),\n        })}\n                onSubmit={(values, actions) => {\n                    console.log(values.message)\n                    actions.resetForm();\n                }}\n        >\n            <HStack as={Form} w={\"100%\"}>\n                <Input as={Field} name={\"message\"} placeholder={\"Type message here...\"} size={\"lg\"} autoComplete={\"off\"}/>\n            </HStack>\n\n        </Formik>\n    );\n};"],"mappings":";AAAA,SAAQA,KAAK,EAAEC,IAAI,EAAEC,MAAM,QAAO,QAAQ;AAC1C,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAAQC,MAAM,EAAEC,KAAK,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,MAAMC,OAAO,GAAGC,IAAA,IAAc;EAAA,IAAb;IAACC;EAAM,CAAC,GAAAD,IAAA;EAC5B,oBACIF,OAAA,CAACL,MAAM;IAACS,aAAa,EAAE;MAACC,OAAO,EAAE;IAAE,CAAE;IAACC,gBAAgB,EAAEV,GAAG,CAACW,MAAM,CAAC;MAC/DF,OAAO,EAAET,GAAG,CAACY,MAAM,EAAE,CAACC,GAAG,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,GAAG;IACxC,CAAC,CAAE;IACKC,QAAQ,EAAEA,CAACC,MAAM,EAAEC,OAAO,KAAK;MAC3BC,OAAO,CAACC,GAAG,CAACH,MAAM,CAACP,OAAO,CAAC;MAC3BQ,OAAO,CAACG,SAAS,EAAE;IACvB,CAAE;IAAAC,QAAA,eAENjB,OAAA,CAACH,MAAM;MAACqB,EAAE,EAAExB,IAAK;MAACyB,CAAC,EAAE,MAAO;MAAAF,QAAA,eACxBjB,OAAA,CAACF,KAAK;QAACoB,EAAE,EAAEzB,KAAM;QAAC2B,IAAI,EAAE,SAAU;QAACC,WAAW,EAAE,sBAAuB;QAACC,IAAI,EAAE,IAAK;QAACC,YAAY,EAAE;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACrG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEJ;AAEjB,CAAC;AAACC,EAAA,GAhBW3B,OAAO;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}